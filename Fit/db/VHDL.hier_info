|IP
clk => IPUart:C0.clk
clk => decoder:C1.Clk
input[0] => IPUart:C0.input[0]
input[1] => IPUart:C0.input[1]
input[2] => IPUart:C0.input[2]
input[3] => IPUart:C0.input[3]
input[4] => IPUart:C0.input[4]
input[5] => IPUart:C0.input[5]
input[6] => IPUart:C0.input[6]
input[7] => IPUart:C0.input[7]
go => IPUart:C0.go
rst => IPUart:C0.rst
rst => decoder:C1.Rst
Rx => IPUart:C0.Rx
Done0 <= decoder:C1.Done0
Q0 <= decoder:C1.Q0
Done1 <= decoder:C1.Done1
Q1 <= decoder:C1.Q1
Done2 <= decoder:C1.Done2
Q2 <= decoder:C1.Q2


|IP|IPUart:C0
clk => emission:C0.clk
clk => reception:C1.clk
input[0] => emission:C0.input[0]
input[1] => emission:C0.input[1]
input[2] => emission:C0.input[2]
input[3] => emission:C0.input[3]
input[4] => emission:C0.input[4]
input[5] => emission:C0.input[5]
input[6] => emission:C0.input[6]
input[7] => emission:C0.input[7]
go => emission:C0.go
rst => emission:C0.rst
rst => reception:C1.rst
Tx <= emission:C0.Tx
Rx => reception:C1.Rx
dataValid <= reception:C1.dataValid
Rx_Error <= reception:C1.Rx_Error
output[0] <= reception:C1.output[0]
output[1] <= reception:C1.output[1]
output[2] <= reception:C1.output[2]
output[3] <= reception:C1.output[3]
output[4] <= reception:C1.output[4]
output[5] <= reception:C1.output[5]
output[6] <= reception:C1.output[6]
output[7] <= reception:C1.output[7]


|IP|IPUart:C0|emission:C0
clk => diviseur_emission:C0.clk
clk => MAE_emission:C1.clk
input[0] => MAE_emission:C1.input[0]
input[1] => MAE_emission:C1.input[1]
input[2] => MAE_emission:C1.input[2]
input[3] => MAE_emission:C1.input[3]
input[4] => MAE_emission:C1.input[4]
input[5] => MAE_emission:C1.input[5]
input[6] => MAE_emission:C1.input[6]
input[7] => MAE_emission:C1.input[7]
go => MAE_emission:C1.go
rst => MAE_emission:C1.rst
Tx <= MAE_emission:C1.Tx


|IP|IPUart:C0|emission:C0|diviseur_emission:C0
clk => tick~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
tick <= tick~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IP|IPUart:C0|emission:C0|MAE_emission:C1
clk => Tx~reg0.CLK
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => EtatPresent~4.DATAIN
tick => clocked.IN0
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => Tx.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
input[0] => Mux0.IN7
input[1] => Mux0.IN6
input[2] => Mux0.IN5
input[3] => Mux0.IN4
input[4] => Mux0.IN3
input[5] => Mux0.IN2
input[6] => Mux0.IN1
input[7] => Mux0.IN0
go => clocked.IN1
rst => Tx~reg0.PRESET
rst => i[0].ACLR
rst => i[1].ACLR
rst => i[2].ACLR
rst => i[3].ACLR
rst => i[4].ACLR
rst => i[5].ACLR
rst => i[6].ACLR
rst => i[7].ACLR
rst => i[8].ACLR
rst => i[9].ACLR
rst => i[10].ACLR
rst => i[11].ACLR
rst => i[12].ACLR
rst => i[13].ACLR
rst => i[14].ACLR
rst => i[15].ACLR
rst => i[16].ACLR
rst => i[17].ACLR
rst => i[18].ACLR
rst => i[19].ACLR
rst => i[20].ACLR
rst => i[21].ACLR
rst => i[22].ACLR
rst => i[23].ACLR
rst => i[24].ACLR
rst => i[25].ACLR
rst => i[26].ACLR
rst => i[27].ACLR
rst => i[28].ACLR
rst => i[29].ACLR
rst => i[30].ACLR
rst => EtatPresent~6.DATAIN
Tx <= Tx~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IP|IPUart:C0|reception:C1
clk => diviseur_reception:C0.clk
clk => MAE_reception:C1.clk
Rx => MAE_reception:C1.Rx
rst => MAE_reception:C1.rst
dataValid <= MAE_reception:C1.dataValid
Rx_Error <= MAE_reception:C1.Rx_Error
output[0] <= MAE_reception:C1.output[0]
output[1] <= MAE_reception:C1.output[1]
output[2] <= MAE_reception:C1.output[2]
output[3] <= MAE_reception:C1.output[3]
output[4] <= MAE_reception:C1.output[4]
output[5] <= MAE_reception:C1.output[5]
output[6] <= MAE_reception:C1.output[6]
output[7] <= MAE_reception:C1.output[7]


|IP|IPUart:C0|reception:C1|diviseur_reception:C0
clk => tick~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clr => tick~reg0.ACLR
clr => counter[0].ACLR
clr => counter[1].ACLR
clr => counter[2].ACLR
clr => counter[3].ACLR
clr => counter[4].ACLR
clr => counter[5].ACLR
clr => counter[6].ACLR
tick <= tick~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IP|IPUart:C0|reception:C1|MAE_reception:C1
clk => output[0]~reg0.CLK
clk => output[1]~reg0.CLK
clk => output[2]~reg0.CLK
clk => output[3]~reg0.CLK
clk => output[4]~reg0.CLK
clk => output[5]~reg0.CLK
clk => output[6]~reg0.CLK
clk => output[7]~reg0.CLK
clk => clr~reg0.CLK
clk => Rx_Error~reg0.CLK
clk => dataValid~reg0.CLK
clk => i[0].CLK
clk => i[1].CLK
clk => i[2].CLK
clk => i[3].CLK
clk => i[4].CLK
clk => i[5].CLK
clk => i[6].CLK
clk => i[7].CLK
clk => i[8].CLK
clk => i[9].CLK
clk => i[10].CLK
clk => i[11].CLK
clk => i[12].CLK
clk => i[13].CLK
clk => i[14].CLK
clk => i[15].CLK
clk => i[16].CLK
clk => i[17].CLK
clk => i[18].CLK
clk => i[19].CLK
clk => i[20].CLK
clk => i[21].CLK
clk => i[22].CLK
clk => i[23].CLK
clk => i[24].CLK
clk => i[25].CLK
clk => i[26].CLK
clk => i[27].CLK
clk => i[28].CLK
clk => i[29].CLK
clk => i[30].CLK
clk => reg[0].CLK
clk => reg[1].CLK
clk => reg[2].CLK
clk => reg[3].CLK
clk => reg[4].CLK
clk => reg[5].CLK
clk => reg[6].CLK
clk => reg[7].CLK
clk => EtatPresent~11.DATAIN
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => reg.OUTPUTSELECT
tick => reg.OUTPUTSELECT
tick => reg.OUTPUTSELECT
tick => reg.OUTPUTSELECT
tick => reg.OUTPUTSELECT
tick => reg.OUTPUTSELECT
tick => reg.OUTPUTSELECT
tick => reg.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => i.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
tick => EtatPresent.OUTPUTSELECT
Rx => reg.DATAB
Rx => reg.DATAB
Rx => reg.DATAB
Rx => reg.DATAB
Rx => reg.DATAB
Rx => reg.DATAB
Rx => reg.DATAB
Rx => reg.DATAB
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
Rx => EtatPresent.OUTPUTSELECT
rst => Rx_Error~reg0.ACLR
rst => dataValid~reg0.ACLR
rst => i[0].ACLR
rst => i[1].ACLR
rst => i[2].ACLR
rst => i[3].ACLR
rst => i[4].ACLR
rst => i[5].ACLR
rst => i[6].ACLR
rst => i[7].ACLR
rst => i[8].ACLR
rst => i[9].ACLR
rst => i[10].ACLR
rst => i[11].ACLR
rst => i[12].ACLR
rst => i[13].ACLR
rst => i[14].ACLR
rst => i[15].ACLR
rst => i[16].ACLR
rst => i[17].ACLR
rst => i[18].ACLR
rst => i[19].ACLR
rst => i[20].ACLR
rst => i[21].ACLR
rst => i[22].ACLR
rst => i[23].ACLR
rst => i[24].ACLR
rst => i[25].ACLR
rst => i[26].ACLR
rst => i[27].ACLR
rst => i[28].ACLR
rst => i[29].ACLR
rst => i[30].ACLR
rst => reg[0].ACLR
rst => reg[1].ACLR
rst => reg[2].ACLR
rst => reg[3].ACLR
rst => reg[4].ACLR
rst => reg[5].ACLR
rst => reg[6].ACLR
rst => reg[7].ACLR
rst => EtatPresent~13.DATAIN
rst => output[0]~reg0.ENA
rst => clr~reg0.ENA
rst => output[7]~reg0.ENA
rst => output[6]~reg0.ENA
rst => output[5]~reg0.ENA
rst => output[4]~reg0.ENA
rst => output[3]~reg0.ENA
rst => output[2]~reg0.ENA
rst => output[1]~reg0.ENA
clr <= clr~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataValid <= dataValid~reg0.DB_MAX_OUTPUT_PORT_TYPE
Rx_Error <= Rx_Error~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IP|decoder:C1
Clk => fdiv:C0.Clk
Clk => MAE_servo:C1.clk
Clk => servo:C5.Clk
Clk => servo:C6.Clk
Clk => servo:C7.Clk
Rst => fdiv:C0.Rst
Rst => MAE_servo:C1.rst
Rst => servo:C5.Rst
Rst => servo:C6.Rst
Rst => servo:C7.Rst
Start => MAE_servo:C1.go
Input[0] => MAE_servo:C1.input[0]
Input[1] => MAE_servo:C1.input[1]
Input[2] => MAE_servo:C1.input[2]
Input[3] => MAE_servo:C1.input[3]
Input[4] => MAE_servo:C1.input[4]
Input[5] => MAE_servo:C1.input[5]
Input[6] => MAE_servo:C1.input[6]
Input[7] => MAE_servo:C1.input[7]
Done0 <= servo:C5.Done
Q0 <= servo:C5.Q
Done1 <= servo:C6.Done
Q1 <= servo:C6.Q
Done2 <= servo:C7.Done
Q2 <= servo:C7.Q


|IP|decoder:C1|FDIV:C0
Clk => Tick7us~reg0.CLK
Clk => Count[0].CLK
Clk => Count[1].CLK
Clk => Count[2].CLK
Clk => Count[3].CLK
Clk => Count[4].CLK
Clk => Count[5].CLK
Clk => Count[6].CLK
Clk => Count[7].CLK
Clk => Count[8].CLK
Rst => Tick7us~reg0.ACLR
Rst => Count[0].ACLR
Rst => Count[1].ACLR
Rst => Count[2].ACLR
Rst => Count[3].ACLR
Rst => Count[4].ACLR
Rst => Count[5].ACLR
Rst => Count[6].ACLR
Rst => Count[7].ACLR
Rst => Count[8].ACLR
Tick7us <= Tick7us~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IP|decoder:C1|MAE_servo:C1
clk => output2[0]~reg0.CLK
clk => output2[1]~reg0.CLK
clk => output2[2]~reg0.CLK
clk => output2[3]~reg0.CLK
clk => output2[4]~reg0.CLK
clk => output2[5]~reg0.CLK
clk => output2[6]~reg0.CLK
clk => output2[7]~reg0.CLK
clk => output1[0]~reg0.CLK
clk => output1[1]~reg0.CLK
clk => output1[2]~reg0.CLK
clk => output1[3]~reg0.CLK
clk => output1[4]~reg0.CLK
clk => output1[5]~reg0.CLK
clk => output1[6]~reg0.CLK
clk => output1[7]~reg0.CLK
clk => output0[0]~reg0.CLK
clk => output0[1]~reg0.CLK
clk => output0[2]~reg0.CLK
clk => output0[3]~reg0.CLK
clk => output0[4]~reg0.CLK
clk => output0[5]~reg0.CLK
clk => output0[6]~reg0.CLK
clk => output0[7]~reg0.CLK
clk => regSelector[0].CLK
clk => regSelector[1].CLK
clk => regSelector[2].CLK
clk => regSelector[3].CLK
clk => regSelector[4].CLK
clk => regSelector[5].CLK
clk => regSelector[6].CLK
clk => regSelector[7].CLK
clk => input_Error~reg0.CLK
clk => dataValid2~reg0.CLK
clk => dataValid1~reg0.CLK
clk => dataValid0~reg0.CLK
clk => regValue[0].CLK
clk => regValue[1].CLK
clk => regValue[2].CLK
clk => regValue[3].CLK
clk => regValue[4].CLK
clk => regValue[5].CLK
clk => regValue[6].CLK
clk => regValue[7].CLK
clk => EtatPresent~9.DATAIN
input[0] => regValue.DATAB
input[0] => Selector7.IN3
input[0] => regSelector.DATAB
input[0] => Equal0.IN7
input[1] => regValue.DATAB
input[1] => Selector6.IN3
input[1] => regSelector.DATAB
input[1] => Equal0.IN6
input[2] => regValue.DATAB
input[2] => Selector5.IN3
input[2] => regSelector.DATAB
input[2] => Equal0.IN2
input[3] => regValue.DATAB
input[3] => Selector4.IN3
input[3] => regSelector.DATAB
input[3] => Equal0.IN1
input[4] => regValue.DATAB
input[4] => Selector3.IN3
input[4] => regSelector.DATAB
input[4] => Equal0.IN5
input[5] => regValue.DATAB
input[5] => Selector2.IN3
input[5] => regSelector.DATAB
input[5] => Equal0.IN4
input[6] => regValue.DATAB
input[6] => Selector1.IN3
input[6] => regSelector.DATAB
input[6] => Equal0.IN3
input[7] => regValue.DATAB
input[7] => Selector0.IN3
input[7] => regSelector.DATAB
input[7] => Equal0.IN0
go => clocked.IN1
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => regValue.OUTPUTSELECT
go => regValue.OUTPUTSELECT
go => regValue.OUTPUTSELECT
go => regValue.OUTPUTSELECT
go => regValue.OUTPUTSELECT
go => regValue.OUTPUTSELECT
go => regValue.OUTPUTSELECT
go => regValue.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
go => EtatPresent.OUTPUTSELECT
rst => dataValid2~reg0.ACLR
rst => dataValid1~reg0.ACLR
rst => dataValid0~reg0.ACLR
rst => regValue[0].ACLR
rst => regValue[1].ACLR
rst => regValue[2].ACLR
rst => regValue[3].ACLR
rst => regValue[4].ACLR
rst => regValue[5].ACLR
rst => regValue[6].ACLR
rst => regValue[7].ACLR
rst => EtatPresent~11.DATAIN
rst => output2[0]~reg0.ENA
rst => input_Error~reg0.ENA
rst => regSelector[7].ENA
rst => regSelector[6].ENA
rst => regSelector[5].ENA
rst => regSelector[4].ENA
rst => regSelector[3].ENA
rst => regSelector[2].ENA
rst => regSelector[1].ENA
rst => regSelector[0].ENA
rst => output0[7]~reg0.ENA
rst => output0[6]~reg0.ENA
rst => output0[5]~reg0.ENA
rst => output0[4]~reg0.ENA
rst => output0[3]~reg0.ENA
rst => output0[2]~reg0.ENA
rst => output0[1]~reg0.ENA
rst => output0[0]~reg0.ENA
rst => output1[7]~reg0.ENA
rst => output1[6]~reg0.ENA
rst => output1[5]~reg0.ENA
rst => output1[4]~reg0.ENA
rst => output1[3]~reg0.ENA
rst => output1[2]~reg0.ENA
rst => output1[1]~reg0.ENA
rst => output1[0]~reg0.ENA
rst => output2[7]~reg0.ENA
rst => output2[6]~reg0.ENA
rst => output2[5]~reg0.ENA
rst => output2[4]~reg0.ENA
rst => output2[3]~reg0.ENA
rst => output2[2]~reg0.ENA
rst => output2[1]~reg0.ENA
output0[0] <= output0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[1] <= output0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[2] <= output0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[3] <= output0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[4] <= output0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[5] <= output0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[6] <= output0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output0[7] <= output0[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[0] <= output1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[1] <= output1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[2] <= output1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[3] <= output1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[4] <= output1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[5] <= output1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[6] <= output1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output1[7] <= output1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output2[0] <= output2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output2[1] <= output2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output2[2] <= output2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output2[3] <= output2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output2[4] <= output2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output2[5] <= output2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output2[6] <= output2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output2[7] <= output2[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataValid0 <= dataValid0~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataValid1 <= dataValid1~reg0.DB_MAX_OUTPUT_PORT_TYPE
dataValid2 <= dataValid2~reg0.DB_MAX_OUTPUT_PORT_TYPE
input_Error <= input_Error~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IP|decoder:C1|converter:C2
input[0] => Add1.IN8
input[0] => Add3.IN14
input[0] => Add4.IN15
input[1] => Add1.IN7
input[1] => Add3.IN12
input[1] => Add3.IN13
input[1] => Add4.IN13
input[2] => Add1.IN6
input[2] => Add3.IN10
input[2] => Add3.IN11
input[2] => Add4.IN12
input[3] => Add1.IN5
input[3] => Add3.IN9
input[3] => Add4.IN11
input[3] => Add2.IN9
input[4] => Add0.IN8
input[5] => Add0.IN7
input[6] => Add0.IN6
input[7] => Add0.IN5
output[0] <= <GND>
output[1] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Add4.DB_MAX_OUTPUT_PORT_TYPE


|IP|decoder:C1|converter:C3
input[0] => Add1.IN8
input[0] => Add3.IN14
input[0] => Add4.IN15
input[1] => Add1.IN7
input[1] => Add3.IN12
input[1] => Add3.IN13
input[1] => Add4.IN13
input[2] => Add1.IN6
input[2] => Add3.IN10
input[2] => Add3.IN11
input[2] => Add4.IN12
input[3] => Add1.IN5
input[3] => Add3.IN9
input[3] => Add4.IN11
input[3] => Add2.IN9
input[4] => Add0.IN8
input[5] => Add0.IN7
input[6] => Add0.IN6
input[7] => Add0.IN5
output[0] <= <GND>
output[1] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Add4.DB_MAX_OUTPUT_PORT_TYPE


|IP|decoder:C1|converter:C4
input[0] => Add1.IN8
input[0] => Add3.IN14
input[0] => Add4.IN15
input[1] => Add1.IN7
input[1] => Add3.IN12
input[1] => Add3.IN13
input[1] => Add4.IN13
input[2] => Add1.IN6
input[2] => Add3.IN10
input[2] => Add3.IN11
input[2] => Add4.IN12
input[3] => Add1.IN5
input[3] => Add3.IN9
input[3] => Add4.IN11
input[3] => Add2.IN9
input[4] => Add0.IN8
input[5] => Add0.IN7
input[6] => Add0.IN6
input[7] => Add0.IN5
output[0] <= <GND>
output[1] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[4] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[5] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[6] <= Add4.DB_MAX_OUTPUT_PORT_TYPE
output[7] <= Add4.DB_MAX_OUTPUT_PORT_TYPE


|IP|decoder:C1|SERVO:C5
Clk => Q~reg0.CLK
Clk => Count[0].CLK
Clk => Count[1].CLK
Clk => Count[2].CLK
Clk => Count[3].CLK
Clk => Count[4].CLK
Clk => Count[5].CLK
Clk => Count[6].CLK
Clk => Count[7].CLK
Clk => Count[8].CLK
Clk => State~5.DATAIN
Rst => Q~reg0.ACLR
Rst => Count[0].ACLR
Rst => Count[1].ACLR
Rst => Count[2].ACLR
Rst => Count[3].ACLR
Rst => Count[4].ACLR
Rst => Count[5].ACLR
Rst => Count[6].ACLR
Rst => Count[7].ACLR
Rst => Count[8].ACLR
Rst => State~7.DATAIN
Tick => Q.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Q.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Start => Done.IN0
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Posit[0] => Count.DATAA
Posit[1] => Count.DATAA
Posit[2] => Count.DATAA
Posit[3] => Count.DATAA
Posit[4] => Count.DATAA
Posit[5] => Count.DATAA
Posit[6] => Count.DATAA
Posit[7] => Count.DATAA
Done <= Done.DB_MAX_OUTPUT_PORT_TYPE
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IP|decoder:C1|SERVO:C6
Clk => Q~reg0.CLK
Clk => Count[0].CLK
Clk => Count[1].CLK
Clk => Count[2].CLK
Clk => Count[3].CLK
Clk => Count[4].CLK
Clk => Count[5].CLK
Clk => Count[6].CLK
Clk => Count[7].CLK
Clk => Count[8].CLK
Clk => State~5.DATAIN
Rst => Q~reg0.ACLR
Rst => Count[0].ACLR
Rst => Count[1].ACLR
Rst => Count[2].ACLR
Rst => Count[3].ACLR
Rst => Count[4].ACLR
Rst => Count[5].ACLR
Rst => Count[6].ACLR
Rst => Count[7].ACLR
Rst => Count[8].ACLR
Rst => State~7.DATAIN
Tick => Q.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Q.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Start => Done.IN0
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Posit[0] => Count.DATAA
Posit[1] => Count.DATAA
Posit[2] => Count.DATAA
Posit[3] => Count.DATAA
Posit[4] => Count.DATAA
Posit[5] => Count.DATAA
Posit[6] => Count.DATAA
Posit[7] => Count.DATAA
Done <= Done.DB_MAX_OUTPUT_PORT_TYPE
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|IP|decoder:C1|SERVO:C7
Clk => Q~reg0.CLK
Clk => Count[0].CLK
Clk => Count[1].CLK
Clk => Count[2].CLK
Clk => Count[3].CLK
Clk => Count[4].CLK
Clk => Count[5].CLK
Clk => Count[6].CLK
Clk => Count[7].CLK
Clk => Count[8].CLK
Clk => State~5.DATAIN
Rst => Q~reg0.ACLR
Rst => Count[0].ACLR
Rst => Count[1].ACLR
Rst => Count[2].ACLR
Rst => Count[3].ACLR
Rst => Count[4].ACLR
Rst => Count[5].ACLR
Rst => Count[6].ACLR
Rst => Count[7].ACLR
Rst => Count[8].ACLR
Rst => State~7.DATAIN
Tick => Q.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Q.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => Count.OUTPUTSELECT
Tick => State.OUTPUTSELECT
Start => Done.IN0
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => Count.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Start => State.OUTPUTSELECT
Posit[0] => Count.DATAA
Posit[1] => Count.DATAA
Posit[2] => Count.DATAA
Posit[3] => Count.DATAA
Posit[4] => Count.DATAA
Posit[5] => Count.DATAA
Posit[6] => Count.DATAA
Posit[7] => Count.DATAA
Done <= Done.DB_MAX_OUTPUT_PORT_TYPE
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


